#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec2 vertexPosition_modelspace;
layout(location = 1) in vec2 vertexUV;
layout(location = 6) in mat4 models;

// Output data ; will be interpolated for each fragment.
out vec2 UV;

// Values that stay constant for the whole mesh.
uniform mat4 M;
uniform bool instanced;

void main()
{
  mat4 model;

  if( instanced )
  {
	model = models;
  }
  else
  {
    model = M;
  }
	
  // Output position of the vertex, in clip space : MVP * position
  gl_Position =  model * vec4(vertexPosition_modelspace,0,1);

  // UV of the vertex.
  UV = vertexUV;
}

